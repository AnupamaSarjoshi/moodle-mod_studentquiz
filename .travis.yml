language: php

sudo: false

notifications:
  email: false

addons:
  postgresql: "9.3"
  # https://docs.moodle.org/dev/Acceptance_testing/Browsers/Working_combinations_of_OS%2BBrowser%2Bselenium
  # firefox is not working with moodle 3.1, but it should ... So far only chrome suits all versions
  #firefox: "47.0.1"
  chrome: stable
  #apt: #can be omitted because mustache is not in use
  #  packages:
  #    - oracle-java8-installer
  #    - oracle-java8-set-default

cache:
  directories:
    - $HOME/.composer/cache
    - $HOME/.npm

# PHP Compatibility Matrix Moodle
# Moodle 3.1: php5.4, php5.5, php5.6, php7.0 (lim)
# Moodle 3.2: php5.6, php7.0 (lim), php7.1 (lim)
# Moodle 3.3: php5.6, php7.0 (lim), php7.1 (lim)
# Moodle 3.4: php7.0, php7.1, php7.2 (exp)
# lim: limited, exp: expected
php:
# - 5.6
 - 7.0
# - 7.1

env:
#  - MOODLE_BRANCH=MOODLE_31_STABLE DB=pgsql
#  - MOODLE_BRANCH=MOODLE_32_STABLE DB=pgsql
  - MOODLE_BRANCH=MOODLE_33_STABLE DB=pgsql

#matrix:
#  exclude:
#    # Moodle 3.1 doesn't support php7.1
#    - php: 7.1
#      env: MOODLE_BRANCH=MOODLE_31_STABLE DB=pgsql
#  include:
#    # Some MySQL as backend with various PHP versions, but just some to save matrix slots
#    - php: 5.6
#      env: MOODLE_BRANCH=MOODLE_31_STABLE DB=mysqli
#    - php: 7.0
#      env: MOODLE_BRANCH=MOODLE_32_STABLE DB=mysqli
#    - php: 7.1
#      env: MOODLE_BRANCH=MOODLE_33_STABLE DB=mysqli
#    # Test upcoming Moodle 3.4 with latest possible versions
#    - php: 7.2
#      env: MOODLE_BRANCH=master DB=pgsql
#    - php: 7.2
#      env: MOODLE_BRANCH=master DB=mysqli

before_install:
  - if [ $MOODLE_BRANCH == 'MOODLE_31_STABLE' ]; then MPCIV=1; else MPCIV=2; fi
  # php settings
  - phpenv config-rm xdebug.ini
  - echo "upload_max_filesize=20M" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  - echo "post_max_size=20M" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  # moodle dependencies
  - if [ $MPCIV == '1' ]; then nvm install node; fi
  # moodle-plugin-ci iinstallation
  - cd ../..
  - composer create-project -n --no-dev --prefer-dist moodlerooms/moodle-plugin-ci ci ^$MPCIV
  - export PATH="$(cd ci/bin; pwd):$(cd ci/vendor/bin; pwd):$PATH"
  # chromedriver
  - chromedriverversion=$(curl https://chromedriver.storage.googleapis.com/LATEST_RELEASE);
  - curl https://chromedriver.storage.googleapis.com/$chromedriverversion/chromedriver_linux64.zip | gunzip - > ci/bin/chromedriver
  - chmod +x ci/bin/chromedriver

install:
  - ls -lah .
  - ls -lah ci/bin
  - moodle-plugin-ci install
  - if [ $MPCIV == '1' ]; then moodle-plugin-ci add-config '$CFG->behat_profiles = ["default" => ["browser" => "chrome"]];'; fi

script:
  - moodle-plugin-ci phplint
  - moodle-plugin-ci phpcpd
  - moodle-plugin-ci phpmd
  - moodle-plugin-ci codechecker
  - if [ $MPCIV == '2' ]; then moodle-plugin-ci validate; fi
  - if [ $MPCIV == '2' ]; then moodle-plugin-ci savepoints; fi
  #- if [ $MPCIV == '2' ]; then moodle-plugin-ci; fi mustache #currently no mustache relevant files, so we can also save the oracle packages
  - if [ $MPCIV == '2' ]; then moodle-plugin-ci grunt; fi
  - if [ $MPCIV == '1' ]; then moodle-plugin-ci csslint; fi
  - if [ $MPCIV == '1' ]; then moodle-plugin-ci shifter; fi
  - if [ $MPCIV == '1' ]; then moodle-plugin-ci jshint; fi
  - moodle-plugin-ci phpunit
  - if [ $MPCIV == '2' ]; then moodle-plugin-ci behat --profile chrome; fi
  - if [ $MPCIV == '1' ]; then moodle-plugin-ci behat; fi
